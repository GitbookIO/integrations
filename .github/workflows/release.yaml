name: Release

on:
    push:
        branches:
            - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
              with:
                  # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
                  fetch-depth: 0

            - name: Setup Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install Dependencies
              run: npm ci

            - name: Create Release Pull Request or Publish to npm
              id: changesets
              uses: changesets/action@v1
              with:
                  publish: npm run release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    publish-integrations:
        name: Publish Integrations
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
            - name: Setup Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
            - name: Install Dependencies
              # We need to build and then re-install so that the "bin" can be correctly linked
              run: |
                  npm ci
                  npm run build
                  npm ci
            - name: Publish all integrations assets to staging
              run: npm run publish-assets
              env:
                  CLOUDFLARE_PAGES_PROJECT: ${{ secrets.INTEGRATIONS_ASSETS_STAGING_PROJECT }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_PAGES_API_TOKEN }}
            - name: Publish all integrations to staging
              run: npm run publish-integrations-staging
              env:
                  GITBOOK_TOKEN: ${{ secrets.GITBOOK_STAGING_API_TOKEN }}
                  GITBOOK_ENDPOINT: https://api.gitbook-staging.com
                  GITBOOK_ORGANIZATION: gitbookio
                  SLACK_CLIENT_ID: ${{ secrets.SLACK_STAGING_CLIENT_ID }}
                  SLACK_CLIENT_SECRET: ${{ secrets.SLACK_STAGING_CLIENT_SECRET }}
                  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_STAGING_SIGNING_SECRET }}
                  FIGMA_CLIENT_ID: ${{ secrets.FIGMA_STAGING_CLIENT_ID }}
                  FIGMA_CLIENT_SECRET: ${{ secrets.FIGMA_STAGING_CLIENT_SECRET }}
                  MAILCHIMP_CLIENT_ID: ${{ secrets.MAILCHIMP_STAGING_CLIENT_ID }}
                  MAILCHIMP_CLIENT_SECRET: ${{ secrets.MAILCHIMP_STAGING_CLIENT_SECRET }}
                  JIRA_CLIENT_ID: ${{ secrets.JIRA_STAGING_CLIENT_ID }}
                  JIRA_CLIENT_SECRET: ${{ secrets.JIRA_STAGING_CLIENT_SECRET }}
                  LINEAR_CLIENT_ID: ${{ secrets.LINEAR_STAGING_CLIENT_ID }}
                  LINEAR_CLIENT_SECRET: ${{ secrets.LINEAR_STAGING_CLIENT_SECRET }}
                  SENTRY_CLIENT_ID: ${{ secrets.SENTRY_STAGING_CLIENT_ID }}
                  SENTRY_CLIENT_SECRET: ${{ secrets.SENTRY_STAGING_CLIENT_SECRET }}
                  SENTRY_GITBOOK_INTEGRATION: ${{ secrets.SENTRY_STAGING_GITBOOK_INTEGRATION }}
            - name: Publish all integrations assets to production
              run: npm run publish-assets
              env:
                  CLOUDFLARE_PAGES_PROJECT: ${{ secrets.INTEGRATIONS_ASSETS_PROD_PROJECT }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_PAGES_API_TOKEN }}
            - name: Publish all integrations to production
              run: npm run publish-integrations
              env:
                  GITBOOK_TOKEN: ${{ secrets.GITBOOK_PROD_API_TOKEN }}
                  GITBOOK_ENDPOINT: https://api.gitbook.com
                  GITBOOK_ORGANIZATION: gitbook
                  SLACK_CLIENT_ID: ${{ secrets.SLACK_PROD_CLIENT_ID }}
                  SLACK_CLIENT_SECRET: ${{ secrets.SLACK_PROD_CLIENT_SECRET }}
                  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_PROD_SIGNING_SECRET }}
                  FIGMA_CLIENT_ID: ${{ secrets.FIGMA_PROD_CLIENT_ID }}
                  FIGMA_CLIENT_SECRET: ${{ secrets.FIGMA_PROD_CLIENT_SECRET }}
                  MAILCHIMP_CLIENT_ID: ${{ secrets.MAILCHIMP_PROD_CLIENT_ID }}
                  MAILCHIMP_CLIENT_SECRET: ${{ secrets.MAILCHIMP_PROD_CLIENT_SECRET }}
                  JIRA_CLIENT_ID: ${{ secrets.JIRA_PROD_CLIENT_ID }}
                  JIRA_CLIENT_SECRET: ${{ secrets.JIRA_PROD_CLIENT_SECRET }}
                  LINEAR_CLIENT_ID: ${{ secrets.LINEAR_PROD_CLIENT_ID }}
                  LINEAR_CLIENT_SECRET: ${{ secrets.LINEAR_PROD_CLIENT_SECRET }}
